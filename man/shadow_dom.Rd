% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shadow_dom.R
\name{shadow_dom}
\alias{shadow_dom}
\title{Wrap htmltools tag objects in shadow DOM}
\usage{
shadow_dom(..., all_initial = FALSE, .noWS = NULL)
}
\arguments{
\item{...}{Attributes and children of the element. Named arguments become
attributes, and positional arguments become children. Valid children are
tags, single-character character vectors (which become text nodes), raw
HTML (see \code{\link[htmltools]{HTML}}), and \code{html_dependency} objects. You can
also pass lists that contain tags, text nodes, or HTML. To use boolean
attributes, use a named argument with a \code{NA} value. (see example)}

\item{all_initial}{Normally, inheritable styles (`background`, `color`,
`font`) are inherited across the shadow DOM boundary. Set `all_initial` to
`TRUE` to reset all styles to their initial (user agent provided) defaults
instead.}

\item{.noWS}{A character vector used to omit some of the whitespace that
would normally be written around this tag. Valid options include
\code{before}, \code{after}, \code{outside}, \code{after-begin}, and
\code{before-end}. Any number of these options can be specified.}
}
\description{
Creates a `<x-with-shadow-dom>...</x-width-shadow-dom>` tag, which is a
custom element that isolates the styling of its contents using a Shadow DOM.
See https://caniuse.com/#feat=shadowdomv1 for browser compatibility
information (notably, Internet Explorer 11 is not supported).
}
\examples{
library(htmltools)

ex <- div(
  tags$style(HTML(c(
    "body { font-family: sans-serif; }",
    "p { color: blue; }"
  ))),
  p("Here's a regular <p> tag; it's blue."),
  shadow_dom(p("Here's a <p> tag in a shadow DOM; it's NOT blue.")),
  shadow_dom(all_initial = TRUE,
    tags$style(HTML("p { color: green; }")),
    p("Here's a <p> tag in a shadow DOM with its own CSS; it's green.")
  )
)

print(ex, browse = TRUE)

}
